snippet #utf8
	# -*- coding: utf-8 -*-
snippet unit
	from unittest import TestCase

	class ${1:ClassName}(TestCase):
	    """${2:docstring for $1}"""
	    def setUp(self):
			"""Setup Test"""
			pass
	    def tearDown(self):
			"""Tear Down each test"""
			pass
snippet tst
	def test_${1|method}(self):
		"""${2|description}"""

		assert ${3|Something}, "${4|Output}"

snippet docst
	'''
	File: `Filename('', 'name')`
	Created: T_IMESTAMP
	Last Modified: T_IMESTAMP
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet sfile
	# -*- coding: utf-8 -*-
	'''
	File: `Filename('', 'name')`
	Created: T_IMESTAMP
	Last Modified: T_IMESTAMP
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet ifmain
	if __name__ == '__main__':
		import sys
		import logging
		logging.basicConfig(level=logging.INFO)
		status = main()
		sys.exit(status)

snippet ldbg
	logger.debug(${1|somevar})
snippet linfo
	logger.info(${1|somevar})
snippet lwarn
	logger.warn(${1|somevar})
snippet mlib
	import matplotlib.pyplot as plt
	fig = plt.figure()
	ax = fig.add_subplot(111)
	plt.rcParams.update({'legend.fontsize':8})
	plt.legend(bbox_to_anchor=(0.,1.04,1.,0.102),loc=6,ncol=2)
	plt.grid()
	plt.show()
snippet mlibdate
	import matplotlib.pyplot as plt
	fig = plt.figure()
	ax = fig.add_subplot(111)
	plt.rcParams.update({'legend.fontsize':8})
	plt.legend(bbox_to_anchor=(0.,1.04,1.,0.102),loc=6,ncol=2)
	dates , values = zip(*datatoplot)
	plt.plot_date(dates,values)
    plt.xticks(rotation=50, size='small')
	plt.grid()
snippet db2
	import ibm_db
	ibm_db_conn = ibm_db.connect('nodename', 'user', 'pwd',
					  {ibm_db.ATTR_CASE:ibm_db.CASE_LOWER})
	sql = ''
	stmt = ibm_db.exec_immediate(ibm_db_conn, sql) #@UndefinedVariable
	result = ibm_db.fetch_assoc(stmt) #@UndefinedVariable
	while(result):
		result = ibm_db.fetch_assoc(stmt)
